def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def dartEnvironmentVariables = [
        APP_APP_NAME_EN: 'OSOS',
        APP_APP_NAME_AR: 'أسس',
        APP_ID         : 'system.dev',
]
if (project.hasProperty('dart-defines')) {

    dartEnvironmentVariables = dartEnvironmentVariables + project.property('dart-defines')
            .split(',')
            .collectEntries { entry ->

                def pair = new String(entry.decodeBase64(), 'UTF-8').split('=')
                println "ENV VAR: ${pair.first()} = ${pair.last()}"
                [(pair.first()): pair.last()]
            }

//    String encoded = "QVBQX0FQUF9OQU1FX0FSPdij2LPYsyDYr9mK2YE="
//    def pair = new String(encoded.decodeBase64(), 'UTF-8')
//    println "AA ${pair}"

}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
android {
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "system.dev"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion 25
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
       // resValue "string", "APP_BASE_URL", dartEnvironmentVariables.APP_BASE_URL
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }


    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            applicationVariants.all { variant ->
                variant.outputs.all {
                    def appName = "SIMAAT_V_"
                    def newName = "${appName}${defaultConfig.versionName}_${defaultConfig.versionCode}.apk"
                    outputFileName = newName
                }
            }
        }
    }

    flavorDimensions "app"
    productFlavors {
        dev {
            dimension "app"
            applicationId dartEnvironmentVariables.APP_ID
            copy {
                from 'src/dev/'
                include '*.json'
                into '.'
            }
        }
        prod {
            dimension "app"
            applicationId dartEnvironmentVariables.APP_ID
            copy {
                from 'src/prod/'
                include '*.json'
                into '.'
            }
        }
        stage {
            dimension "app"
            applicationId dartEnvironmentVariables.APP_ID
            copy {
                from 'src/stage/'
                include '*.json'
                into '.'
            }
        }
    }

}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.firebase:firebase-appcheck-safetynet:16.1.2'

}
